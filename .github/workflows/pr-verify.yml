name: Verify Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Labels
        run: |
          console.log(JSON.stringify(${{github.event.pull_request}}, null, 2))

      # - name: Setup Java
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: "11"

      # - name: Setup Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: "2.10.0"
      #     channel: "stable"

      # - name: Install Flutter dependencies
      #   run: |
      #     flutter pub get

      # - name: Build APK
      #   run: |
      #     flutter build apk -t "lib/main.dart" --release

      # - name: Add label success
      #   if: ${{ success() }}
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.TOKEN }}
      #     script: |
      #       const { data: labels } = await github.pulls.listLabels({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.issue.number
      #       });

      #       const labelExists = labels.some(label => label.name === 'no merge');

      #       if (labelExists) {
      #         await github.rest.issues.removeLabel({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           name: 'no merge'
      #         });
      #       }

      #       github.rest.issues.addLabels({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         labels: ['build-successful']
      #       })

      # - name: Add label failure
      #   if: ${{ failure() }}
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.TOKEN }}
      #     script: |
      #       const prNumber = context.payload.pull_request.number;

      #       const { data: labels } = await github.pulls.listLabels({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: prNumber
      #       });

      #       const labelExists = labels.some(label => label.name === 'build-successful');

      #       if (labelExists) {
      #         await github.rest.issues.removeLabel({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           name: 'build-successful'
      #         });
      #       }

      #       github.rest.issues.addLabels({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         labels: ['no merge']
      #       })
